import java.util.*;
public class Array_14 {

	public static void main(String[] args) {
		// 다차원 배열
		// 일차원 배열과 달리 다수개의 인덱스를 사용하여 각  요소에 접근할 수 있는 배열
		// 1차원 배열 : 선의 형태
		// 1차원 배열의 인덱스 : 선상에 있는 각 요소의 위치

		// 2차원 배열 : 면의 형태 ( 행과 열의 개념 )
		// 2차원 배열의 인덱스 : 행의 위치값, 열의 위치값
		// 3차원 배열 : 정육면체의 형태
		// ( 다수개의 이차원 배열이 중첩되는 형태 ) 
		
		// 다차원 배열이 사용되는 이유
		// 프로그램에서 다수개의 일차원이 사용되는 경우 하나의 반복문으로 해결할 수 없다.
		// 각각의 배열을 제어하기 위한 반복문을 중복해서 작성
		// - 1차원 배열이 다수개 사용되는 경우 2차원 배열을 사용하여 하나의 변수명으로 해결
		// - 2차원 배열이 다수개 사용되는 경우 3차원 배열을 사용하여 하나의 변수명으로 해결
		
		// 두명의 학생 성적을 처리하는 프로그램을 작성하세요.
		// 성적은 3과목의 성적을 입력받습니다.
		Scanner kb = new Scanner(System.in);
		
		// 2차원 배열을 사용하여 처리하는 방법
		// 2행 3열의 이차원 배열 생성
		// (3의 크기를 갖는 1차원 배열이 2개 생성된것과 동일함)
		int [][] scores = new int [2][3];
		
		// 외부의 반복문
		// 2차원 배열의 행의 인덱스를 제어하는 반복문
		for ( int i = 0 ; i < 2 ; i++ ) {
			// 내부의 반복문
			// 2차원 배열의 열의 인덱스를 제어하는 반복문
			for ( int j = 0 ; j < 3 ; j++ ) {
				System.out.printf("%d번째 학생의 %d번째 성적 입력 : \n", i+1, j+1);
				scores[i][j] = kb.nextInt();
			}
		}
		
	
		/*
		// 두명의 학생 성적을 처리하는 프로그램을 작성하세요.
		// 성적은 3과목의 성적을 입력받습니다.
		Scanner kb = new Scanner(System.in);
		
		// 1번째 학생의 성적 정보를 저장하는 배열
		int [] scores_1 = new int[3];
		// 2번째 학생의 성적 정보를 저장하는 배열
		int [] scores_2 = new int[3];
		
		// 각 학생의 성적을 저장하는 배열이 다르기 때문에 하나의 반복문을 사용해서 처리할 수 없다.
		// 1번째 학생의 성적 입력
		for( int i = 0 ; i < scores_1.length ; i++ ) {
			System.out.printf("1번째 학생의 %d번째 성적입력 : ", i+1);
			scores_1[i] = kb.nextInt();
		}
		
		// 2번째 학생의 성적 입력
		for( int i = 0 ; i < scores_1.length ; i++ ) {
			System.out.printf("2번째 학생의 %d번째 성적입력 : ", i+1);
			scores_2[i] = kb.nextInt();
		}
		*/	
	}

}
